Search.setIndex({"docnames": ["CommandScripts", "Missions", "Vision", "Vision.proj_modules", "index", "modules", "proj_modules", "unified_frameworks", "unified_frameworks.bridge", "unified_frameworks.pathfinders", "unified_frameworks.sensor_array", "unified_frameworks.sensor_array.gps_compass", "unified_frameworks.sensor_array.lidar"], "filenames": ["CommandScripts.rst", "Missions.rst", "Vision.rst", "Vision.proj_modules.rst", "index.rst", "modules.rst", "proj_modules.rst", "unified_frameworks.rst", "unified_frameworks.bridge.rst", "unified_frameworks.pathfinders.rst", "unified_frameworks.sensor_array.rst", "unified_frameworks.sensor_array.gps_compass.rst", "unified_frameworks.sensor_array.lidar.rst"], "titles": ["CommandScripts package", "Missions package", "Vision package", "Vision.proj_modules package", "Welcome to Autonomy&#64;SJSU-Robotics\u2019s documentation!", "urc-intelligent-systems-2023", "proj_modules package", "unified_frameworks package", "unified_frameworks.bridge package", "unified_frameworks.pathfinders package", "unified_frameworks.sensor_array package", "unified_frameworks.sensor_array.gps_compass package", "unified_frameworks.sensor_array.lidar package"], "terms": {"class": [0, 6, 7, 9, 11, 12], "base": [0, 6, 7, 8, 9, 11, 12], "object": [0, 2, 4, 5, 6, 11, 12], "get_bear": [0, 4, 5, 10, 11], "current_gp": [0, 11], "target_gp": [0, 11], "return": [0, 6, 11], "angl": [0, 6, 11, 12], "between": [0, 11, 12], "two": [0, 11], "gp": [0, 4, 5, 7, 9, 11], "coordin": [0, 7, 9, 11], "param": [0, 6, 11], "tupl": [0, 7, 11, 12], "latitud": [0, 11], "longitud": [0, 11], "float": [0, 7, 9, 11], "get_dist": [0, 4, 5, 10, 11], "get_spin_angl": [0, 4, 5], "jsonify_command": [0, 4, 5], "command": [0, 6, 7], "max_spe": 0, "max_steer": 0, "compass": [0, 4, 5, 6], "gps_coordinate_map": 0, "pid_steer": [0, 4, 5], "steer_output": 0, "change_mod": [0, 4, 5], "desired_mod": 0, "forward_dr": [0, 4, 5], "get_steer": [0, 4, 5], "gps_target": [0, 7], "goto_next_coordin": [0, 4, 5], "spin": [0, 4, 5, 6], "stop_rov": [0, 4, 5], "vfh_obstacle_avoid": [0, 4, 5], "distance_threshold": 0, "general_angl": 0, "current_longlat": 0, "target_longlat": 0, "get_target_angl": [0, 4, 5], "lidar_data": 0, "rover_angl": 0, "obstacl": [0, 7, 9, 12], "avoid": 0, "logic": 0, "us": [0, 6, 9], "vector": 0, "field": [0, 9], "histogram": 0, "vfh": 0, "list": [0, 6, 7, 9, 12], "arrai": 0, "360": 0, "element": 0, "each": [0, 7, 12], "index": [0, 4], "i": [0, 7, 9, 11, 12], "an": [0, 6, 9, 12], "int": [0, 6, 11], "rover": [0, 6, 7], "current": [0, 7, 9, 11], "face": 0, "": [0, 6, 9], "posit": [0, 9, 11], "target": [0, 11], "integ": 0, "The": [0, 7, 11], "we": [0, 6, 11], "want": 0, "turn": [0, 9], "object_detect": [0, 4, 5], "d": [0, 6], "rover_comm": 0, "url": [0, 6], "get_rover_statu": [0, 4, 5], "bear": 0, "distanc": [0, 11, 12], "start_miss": [0, 4, 5], "update_gp": [0, 4, 5], "proj_modul": [2, 4, 5], "submodul": [2, 4, 5], "camera": [2, 4, 5], "test": [2, 4, 5, 12], "width": [2, 4, 5], "stereo": [2, 4, 5], "hi": 4, "hello": 4, "There": 4, "urc": 4, "intellig": 4, "system": 4, "2023": 4, "commandscript": [4, 5], "packag": [4, 5], "autohelp": [4, 5, 11], "modul": [4, 5], "gps_nav": [4, 5], "mmt_drive_command": [4, 5], "trajectori": [4, 5], "drive_command": [4, 5], "mission": [4, 5, 6], "mmt_test": [4, 5], "drive": [4, 5, 6], "vision": [4, 5], "subpackag": [4, 5], "gpsread": [4, 5, 6], "get_posit": [4, 5, 6], "send_request": [4, 5, 6], "ir_sensor": [4, 5], "lsm303": [4, 5], "get_head": [4, 5, 6], "get_raw": [4, 5, 6], "hard_iron_bias_x": [4, 5, 6], "hard_iron_bias_i": [4, 5, 6], "hard_iron_bias_z": [4, 5, 6], "soft_iron_bias_xx": [4, 5, 6], "soft_iron_bias_xi": [4, 5, 6], "soft_iron_bias_xz": [4, 5, 6], "soft_iron_bias_yx": [4, 5, 6], "soft_iron_bias_yi": [4, 5, 6], "soft_iron_bias_yz": [4, 5, 6], "soft_iron_bias_zx": [4, 5, 6], "soft_iron_bias_zi": [4, 5, 6], "soft_iron_bias_zz": [4, 5, 6], "mpu6050": [4, 5], "mpu_init": [4, 5, 6], "read_data": [4, 5, 6], "read_raw_data": [4, 5, 6], "serial": [4, 5], "serialsystem": [4, 5, 6], "close_seri": [4, 5, 6], "read_seri": [4, 5, 6], "write_seri": [4, 5, 6], "wifi": [4, 5], "mode": [4, 5, 6], "translat": [4, 5, 6], "get_statu": [4, 5, 6], "send_command": [4, 5, 6], "write_data": [4, 5, 6], "make_drive_command": [4, 5, 6], "old_gp": [4, 5], "unified_framework": [4, 5], "bridg": [4, 5, 7], "client_sid": [4, 5, 7], "blocking_start_cli": [4, 7, 8], "bridge_is_up": [4, 7, 8], "close_bridg": [4, 7, 8], "create_connect": [4, 7, 8], "open_bridg": [4, 7, 8], "sync_path": [4, 7, 8], "except": [4, 5, 7, 12], "noopenbridgeexcept": [4, 7, 8], "rover_sid": [4, 5, 7], "blocking_start_serv": [4, 7, 8], "send_data": [4, 7, 8], "start_serv": [4, 7, 8], "value_chang": [4, 7, 8], "pathfind": [4, 5, 7], "navigatorclass": [4, 5, 7], "navig": [4, 7, 9], "distance_to_target": [4, 7, 9], "get_goal": [4, 7, 9], "get_path": [4, 7, 9], "get_tree_link": [4, 7, 9], "set_goal": [4, 7, 9], "set_gps_goal": [4, 7, 9], "start_pathfinder_servic": [4, 7, 9], "stop_pathfinder_servic": [4, 7, 9], "a_star_navig": [4, 5, 7], "name": [4, 7, 9], "rapid_random_tre": [4, 5, 7], "rrt_navig": [4, 7, 9], "exploration_step": [4, 7, 9], "grow_tre": [4, 7, 9], "straight_shot": [4, 5, 7], "straightshot": [4, 7, 9], "sensor_arrai": [4, 5, 7], "gps_compass": [4, 7, 10], "actual_gps_compass": [4, 7, 10], "actualgpscompass": [4, 10, 11], "get_cur_angl": [4, 10, 11], "get_cur_gp": [4, 10, 11], "read": [4, 7, 10, 11], "start_servic": [4, 5, 7, 10, 11, 12], "stop_servic": [4, 5, 7, 10, 11, 12], "fake_gps_compass": [4, 7, 10], "fakegpscompass": [4, 10, 11], "geographic_coordinates_to_relative_coordin": [4, 5, 7, 10, 11], "gps_compass_class": [4, 7, 10], "util": [4, 7, 10, 11], "wireless_gps_compass": [4, 7, 10], "lidar": [4, 7, 10], "lidarclass": [4, 7, 10], "lidardisconnectexcept": [4, 10, 12], "actual_lidar": [4, 7, 10], "actuallidar": [4, 10, 12], "connect": [4, 10, 12], "connect_to_rplidar": [4, 10, 12], "disconnect": [4, 10, 11, 12], "get_measur": [4, 10, 12], "getdeviceport": [4, 10, 12], "bridge_lidar": [4, 7, 10], "bridgelidar": [4, 10, 12], "path": [4, 7, 8, 9, 10, 12], "fake_lidar": [4, 7, 10], "fakelidar": [4, 10, 12], "get_obstacl": [4, 5, 7, 10, 12], "get_point_cloud": [4, 10, 12], "nolidarexcept": [4, 10, 12], "lidar_visu": [4, 7, 10], "actual_gps_test": [4, 5, 7], "bridge_gp": [4, 5, 7], "server_gp": [4, 5, 7], "captain": [4, 5], "at_coordinate_funct": [4, 5, 7], "captain_act": [4, 5, 7], "captain_stop": [4, 5, 7], "run_captain": [4, 5, 7], "pathfinder_visu": [4, 5], "run_visu": [4, 5, 7], "show_visu": [4, 5, 7], "unified_util": [4, 5], "servic": [4, 5, 7, 9, 11], "is_run": [4, 5, 7, 8], "cart_to_polar": [4, 5, 7], "keep_track": [4, 5, 7], "polar_di": [4, 5, 7], "polar_sum": [4, 5, 7], "polar_to_cart": [4, 5, 7], "printlog": [4, 5, 7], "same_polar_point": [4, 5, 7], "three_point_devi": [4, 5, 7], "track_tim": [4, 5, 7], "worldview": [4, 5, 9], "get_point": [4, 5, 7], "get_rover_bodi": [4, 5, 7], "worldview_visu": [4, 5], "search": 4, "page": 4, "autonomi": 5, "content": 5, "port": [6, 11, 12], "baudrat": 6, "none": [6, 9, 11, 12], "lonlat": 6, "8": 6, "33426572": 6, "38": 6, "4854981": 6, "0": [6, 8, 12], "51834922": 6, "20": 6, "097355661177684": 6, "20530722218264985": 6, "544377527437325": 6, "20530722218265313": 6, "0365536823096": 6, "1": [6, 8, 12], "1208798385500047": 6, "5443775274373277": 6, "12087983855": 6, "19": 6, "24727698802664": 6, "addr": 6, "messag": 6, "t": 6, "address_url": 6, "max_retri": 6, "3": [6, 12], "wait_tim": 6, "get": [6, 7, 9, 12], "data": [6, 7, 11], "from": [6, 7, 9, 11, 12], "control": 6, "expect": 6, "respons": [6, 7], "hb": 6, "io": 6, "wo": 6, "dm": 6, "char": 6, "cmd": 6, "max": 6, "number": [6, 9, 12], "request": 6, "send": [6, 7], "web": 6, "server": 6, "befor": 6, "give": 6, "up": 6, "json": 6, "success": 6, "otherwis": 6, "alia": 6, "http": 6, "post": 6, "dict": 6, "someth": 6, "just": 6, "print": 6, "out": 6, "whether": 6, "wa": 6, "successfulli": 6, "sent": 6, "speed_perc": 6, "angle_degre": 6, "creat": [6, 9], "written": 6, "str": [6, 11], "specifi": 6, "which": 6, "interpret": 6, "default": 6, "speed": 6, "can": [6, 9, 11], "should": [6, 7, 11, 12], "deviat": 6, "look": 6, "forward": 6, "thi": [6, 7, 9, 11, 12], "being": 6, "modifi": 6, "futur": 6, "script": [7, 9, 12], "take": 7, "determin": 7, "get_target_spe": 7, "callabl": 7, "function": [7, 9], "run": 7, "when": [7, 11], "stub": 7, "eventu": 7, "aruco": 7, "tag": 7, "is_captain_run": 7, "bool": [7, 12], "get_pathfind": 7, "on_hover_mous": 7, "lambda": 7, "file": [7, 12], "hold": 7, "help": [7, 9, 12], "service_func": 7, "_abstract_servic": [7, 12], "arg": [7, 12], "kwarg": 7, "is_act": 7, "log": 7, "func": 7, "code": 7, "all": [7, 9], "sensori": 7, "input": 7, "unifi": 7, "them": 7, "singl": 7, "everyth": 7, "els": 7, "access": 7, "target_latitud": [7, 9, 11], "target_longitud": [7, 9, 11], "where": [7, 11, 12], "point": [7, 9, 12], "cloud": [7, 12], "environ": [7, 9], "radian": [7, 11, 12], "meter": [7, 12], "bodi": 7, "start": [7, 11, 12], "sensor": 7, "stop": [7, 12], "async": 8, "uri": 8, "is_al": 8, "w": 8, "get_valu": 8, "is_connect": 8, "check_interv": 8, "abc": 9, "abstract": 9, "ndarrai": 9, "polar_point": 9, "set": 9, "goal": 9, "given": 9, "must": 9, "call": [9, 11], "frequent": 9, "order": 9, "continu": 9, "head": [9, 11], "right": 9, "direct": 9, "implement": 9, "A": 9, "stearch": 9, "contin": [9, 11], "space": 9, "find": 9, "destin": 9, "bla": 9, "class2": 9, "service_nam": 9, "keep": 9, "upto": 9, "date": 9, "account": 9, "surround": 9, "thought": 9, "further": 9, "develop": 9, "limit": 9, "chart": 9, "iter": 9, "make": [9, 12], "so": 9, "its": 9, "alwai": 9, "rout": 9, "onli": 9, "reset": 9, "everi": 9, "onc": 9, "while": 9, "updat": 9, "neighbor": 9, "realist": 9, "constraint": 9, "like": 9, "sharp": 9, "cost": 9, "have": 9, "higher": 9, "potenti": 9, "could": 9, "exist": 9, "new": 9, "instead": 9, "invalid": 9, "due": 9, "liter": 9, "a_star": 9, "rrt": 9, "top": 9, "level": 9, "It": 9, "do": 9, "calcul": 9, "cartesian": 9, "linestr": 9, "is_grow": 9, "_gpscompass": 11, "latest": 11, "known": 11, "rel": 11, "north": 11, "format": 11, "On": 11, "thread": 11, "wai": 11, "retriev": 11, "convert": 11, "polar": 11, "form": 11, "theta": 11, "r": 11, "degre": [11, 12], "method": 11, "were": 11, "taken": 11, "contain": 11, "follow": 11, "distanceinkm": 11, "distanceinmil": 11, "_lidar": 12, "max_attempt": 12, "wait_second": 12, "verbose_attempt": 12, "fals": 12, "attempt": 12, "second": 12, "wait": 12, "true": 12, "made": 12, "measur": 12, "qualiti": 12, "millimet": 12, "meant": 12, "fake": 12, "drop": 12, "replac": 12, "actual": 12, "rplidar": 12, "think": 12, "optim": 12, "100": 12, "angular_r": 12, "translational_r": 12, "jitter": 12, "nois": 12, "empty_scan": 12, "prefer": 12, "thresh": 12, "closer": 12, "than": 12, "threshold": 12, "ar": 12, "group": 12, "same": 12, "previou": 12, "few": 12, "scan": 12}, "objects": {"": [[0, 0, 0, "-", "CommandScripts"], [1, 0, 0, "-", "Missions"], [2, 0, 0, "-", "Vision"], [6, 0, 0, "-", "proj_modules"], [7, 0, 0, "-", "unified_frameworks"]], "CommandScripts": [[0, 0, 0, "-", "AutoHelp"], [0, 0, 0, "-", "GPS_NAV"], [0, 0, 0, "-", "MMT_drive_command"], [0, 0, 0, "-", "Trajectory"], [0, 0, 0, "-", "autonomy"], [0, 0, 0, "-", "drive_command"]], "CommandScripts.AutoHelp": [[0, 1, 1, "", "AutoHelp"]], "CommandScripts.AutoHelp.AutoHelp": [[0, 2, 1, "", "get_bearing"], [0, 2, 1, "", "get_distance"], [0, 2, 1, "", "get_spin_angle"], [0, 2, 1, "", "jsonify_commands"]], "CommandScripts.GPS_NAV": [[0, 1, 1, "", "GPS_Nav"], [0, 1, 1, "", "VFH_obstacle_avoidance"]], "CommandScripts.GPS_NAV.GPS_Nav": [[0, 2, 1, "", "PID_steer"], [0, 2, 1, "", "change_modes"], [0, 2, 1, "", "forward_drive"], [0, 2, 1, "", "get_steering"], [0, 2, 1, "", "goto_next_coordinate"], [0, 2, 1, "", "spin"], [0, 2, 1, "", "stop_rover"]], "CommandScripts.GPS_NAV.VFH_obstacle_avoidance": [[0, 2, 1, "", "get_bearing"], [0, 2, 1, "", "get_target_angle"]], "CommandScripts.Trajectory": [[0, 1, 1, "", "Trajectory"]], "CommandScripts.Trajectory.Trajectory": [[0, 2, 1, "", "object_detected"]], "CommandScripts.autonomy": [[0, 1, 1, "", "Autonomy"]], "CommandScripts.autonomy.Autonomy": [[0, 2, 1, "", "get_rover_status"], [0, 2, 1, "", "start_mission"], [0, 2, 1, "", "update_gps"]], "Missions": [[1, 0, 0, "-", "MMT_testing"], [1, 0, 0, "-", "drive"]], "Vision": [[3, 0, 0, "-", "proj_modules"]], "proj_modules": [[6, 0, 0, "-", "GPS"], [6, 0, 0, "-", "LSM303"], [6, 0, 0, "-", "MPU6050"], [6, 0, 0, "-", "Serial"], [6, 0, 0, "-", "WiFi"], [6, 0, 0, "-", "old_GPS"]], "proj_modules.GPS": [[6, 1, 1, "", "gpsRead"]], "proj_modules.GPS.gpsRead": [[6, 2, 1, "", "get_position"], [6, 2, 1, "", "send_request"]], "proj_modules.LSM303": [[6, 1, 1, "", "Compass"]], "proj_modules.LSM303.Compass": [[6, 2, 1, "", "get_heading"], [6, 2, 1, "", "get_raw"], [6, 3, 1, "", "hard_iron_bias_x"], [6, 3, 1, "", "hard_iron_bias_y"], [6, 3, 1, "", "hard_iron_bias_z"], [6, 3, 1, "", "soft_iron_bias_xx"], [6, 3, 1, "", "soft_iron_bias_xy"], [6, 3, 1, "", "soft_iron_bias_xz"], [6, 3, 1, "", "soft_iron_bias_yx"], [6, 3, 1, "", "soft_iron_bias_yy"], [6, 3, 1, "", "soft_iron_bias_yz"], [6, 3, 1, "", "soft_iron_bias_zx"], [6, 3, 1, "", "soft_iron_bias_zy"], [6, 3, 1, "", "soft_iron_bias_zz"]], "proj_modules.MPU6050": [[6, 1, 1, "", "MPU6050"]], "proj_modules.MPU6050.MPU6050": [[6, 2, 1, "", "MPU_Init"], [6, 2, 1, "", "read_data"], [6, 2, 1, "", "read_raw_data"]], "proj_modules.Serial": [[6, 1, 1, "", "SerialSystem"]], "proj_modules.Serial.SerialSystem": [[6, 2, 1, "", "close_serial"], [6, 2, 1, "", "read_serial"], [6, 2, 1, "", "write_serial"]], "proj_modules.WiFi": [[6, 1, 1, "", "Modes"], [6, 1, 1, "", "WiFi"], [6, 4, 1, "", "make_drive_command"]], "proj_modules.WiFi.Modes": [[6, 3, 1, "", "DRIVE"], [6, 3, 1, "", "SPIN"], [6, 3, 1, "", "TRANSLATE"]], "proj_modules.WiFi.WiFi": [[6, 2, 1, "", "get_status"], [6, 2, 1, "", "read_data"], [6, 2, 1, "", "send_command"], [6, 2, 1, "", "write_data"]], "proj_modules.old_GPS": [[6, 1, 1, "", "gpsRead"]], "proj_modules.old_GPS.gpsRead": [[6, 2, 1, "", "get_position"], [6, 2, 1, "", "send_request"]], "unified_frameworks": [[8, 0, 0, "-", "bridge"], [7, 0, 0, "-", "captain"], [7, 0, 0, "-", "pathfinder_visualizer"], [9, 0, 0, "-", "pathfinders"], [10, 0, 0, "-", "sensor_array"], [7, 0, 0, "-", "unified_utils"], [7, 0, 0, "-", "worldview"], [7, 0, 0, "-", "worldview_visualizer"]], "unified_frameworks.bridge": [[8, 0, 0, "-", "client_side"], [8, 0, 0, "-", "exceptions"], [8, 0, 0, "-", "rover_side"]], "unified_frameworks.bridge.client_side": [[8, 4, 1, "", "blocking_start_client"], [8, 4, 1, "", "bridge_is_up"], [8, 4, 1, "", "close_bridge"], [8, 4, 1, "", "create_connections"], [8, 4, 1, "", "open_bridge"], [8, 4, 1, "", "sync_path"]], "unified_frameworks.bridge.exceptions": [[8, 5, 1, "", "NoOpenBridgeException"]], "unified_frameworks.bridge.rover_side": [[8, 4, 1, "", "blocking_start_server"], [8, 4, 1, "", "bridge_is_up"], [8, 4, 1, "", "send_data"], [8, 4, 1, "", "start_server"], [8, 4, 1, "", "value_changed"]], "unified_frameworks.captain": [[7, 1, 1, "", "Captain"]], "unified_frameworks.captain.Captain": [[7, 2, 1, "", "at_coordinate_function"], [7, 2, 1, "", "captain_act"], [7, 2, 1, "", "captain_stop"], [7, 2, 1, "", "run_captain"]], "unified_frameworks.pathfinder_visualizer": [[7, 4, 1, "", "run_visualizer"], [7, 4, 1, "", "show_visual"]], "unified_frameworks.pathfinders": [[9, 0, 0, "-", "NavigatorClass"], [9, 0, 0, "-", "a_star_navigator"], [9, 0, 0, "-", "pathfinder"], [9, 0, 0, "-", "rapid_random_tree"], [9, 0, 0, "-", "straight_shot"]], "unified_frameworks.pathfinders.NavigatorClass": [[9, 1, 1, "", "Navigator"]], "unified_frameworks.pathfinders.NavigatorClass.Navigator": [[9, 2, 1, "", "distance_to_target"], [9, 2, 1, "", "get_goal"], [9, 2, 1, "", "get_path"], [9, 2, 1, "", "get_tree_links"], [9, 2, 1, "", "set_goal"], [9, 2, 1, "", "set_gps_goal"], [9, 2, 1, "", "start_pathfinder_service"], [9, 2, 1, "", "stop_pathfinder_service"]], "unified_frameworks.pathfinders.a_star_navigator": [[9, 1, 1, "", "A_Star_Navigator"]], "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator": [[9, 2, 1, "", "get_path"], [9, 2, 1, "", "get_tree_links"], [9, 3, 1, "", "name"], [9, 2, 1, "", "start_pathfinder_service"], [9, 2, 1, "", "stop_pathfinder_service"]], "unified_frameworks.pathfinders.pathfinder": [[9, 1, 1, "", "Pathfinder"]], "unified_frameworks.pathfinders.pathfinder.Pathfinder": [[9, 3, 1, "", "PATHFINDERS"], [9, 2, 1, "", "distance_to_target"], [9, 2, 1, "", "get_goal"], [9, 2, 1, "", "get_path"], [9, 2, 1, "", "get_tree_links"], [9, 2, 1, "", "set_goal"], [9, 2, 1, "", "start_pathfinder_service"], [9, 2, 1, "", "stop_pathfinder_service"]], "unified_frameworks.pathfinders.rapid_random_tree": [[9, 1, 1, "", "RRT_Navigator"], [9, 4, 1, "", "exploration_step"], [9, 4, 1, "", "grow_tree"]], "unified_frameworks.pathfinders.rapid_random_tree.RRT_Navigator": [[9, 2, 1, "", "get_path"], [9, 2, 1, "", "get_tree_links"], [9, 2, 1, "", "start_pathfinder_service"], [9, 2, 1, "", "stop_pathfinder_service"]], "unified_frameworks.pathfinders.straight_shot": [[9, 1, 1, "", "StraightShot"]], "unified_frameworks.pathfinders.straight_shot.StraightShot": [[9, 2, 1, "", "get_path"], [9, 2, 1, "", "get_tree_links"], [9, 2, 1, "", "start_pathfinder_service"], [9, 2, 1, "", "stop_pathfinder_service"]], "unified_frameworks.sensor_array": [[11, 0, 0, "-", "gps_compass"], [12, 0, 0, "-", "lidar"]], "unified_frameworks.sensor_array.gps_compass": [[11, 0, 0, "-", "actual_gps_compass"], [11, 0, 0, "-", "fake_gps_compass"], [11, 0, 0, "-", "gps_compass_class"]], "unified_frameworks.sensor_array.gps_compass.actual_gps_compass": [[11, 1, 1, "", "ActualGPSCompass"]], "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass": [[11, 2, 1, "", "get_cur_angle"], [11, 2, 1, "", "get_cur_gps"], [11, 2, 1, "", "read"], [11, 2, 1, "", "start_service"], [11, 2, 1, "", "stop_service"]], "unified_frameworks.sensor_array.gps_compass.fake_gps_compass": [[11, 1, 1, "", "FakeGPSCompass"]], "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass": [[11, 2, 1, "", "geographic_coordinates_to_relative_coordinates"], [11, 2, 1, "", "get_cur_angle"], [11, 2, 1, "", "get_cur_gps"], [11, 2, 1, "", "start_service"], [11, 2, 1, "", "stop_service"]], "unified_frameworks.sensor_array.gps_compass.gps_compass_class": [[11, 1, 1, "", "Util"]], "unified_frameworks.sensor_array.gps_compass.gps_compass_class.Util": [[11, 2, 1, "", "get_bearing"], [11, 2, 1, "", "get_distance"]], "unified_frameworks.sensor_array.lidar": [[12, 0, 0, "-", "LidarClass"], [12, 0, 0, "-", "actual_lidar"], [12, 0, 0, "-", "bridge_lidar"], [12, 0, 0, "-", "fake_lidar"], [12, 0, 0, "-", "lidar"]], "unified_frameworks.sensor_array.lidar.LidarClass": [[12, 5, 1, "", "LidarDisconnectException"]], "unified_frameworks.sensor_array.lidar.actual_lidar": [[12, 1, 1, "", "ActualLidar"], [12, 4, 1, "", "getDevicePort"]], "unified_frameworks.sensor_array.lidar.actual_lidar.ActualLidar": [[12, 2, 1, "", "connect"], [12, 2, 1, "", "connect_to_RPLidar"], [12, 2, 1, "", "disconnect"], [12, 2, 1, "", "get_measures"]], "unified_frameworks.sensor_array.lidar.bridge_lidar": [[12, 1, 1, "", "BridgeLidar"]], "unified_frameworks.sensor_array.lidar.bridge_lidar.BridgeLidar": [[12, 3, 1, "", "PATH"], [12, 2, 1, "", "connect"], [12, 2, 1, "", "disconnect"], [12, 2, 1, "", "get_measures"]], "unified_frameworks.sensor_array.lidar.fake_lidar": [[12, 1, 1, "", "FakeLidar"]], "unified_frameworks.sensor_array.lidar.fake_lidar.FakeLidar": [[12, 2, 1, "", "connect"], [12, 2, 1, "", "disconnect"], [12, 2, 1, "", "get_measures"]], "unified_frameworks.sensor_array.lidar.lidar": [[12, 1, 1, "", "Lidar"], [12, 5, 1, "", "NoLidarException"]], "unified_frameworks.sensor_array.lidar.lidar.Lidar": [[12, 2, 1, "", "get_obstacles"], [12, 2, 1, "", "get_point_clouds"], [12, 2, 1, "", "start_service"], [12, 2, 1, "", "stop_service"]], "unified_frameworks.unified_utils": [[7, 1, 1, "", "Service"], [7, 4, 1, "", "cart_to_polar"], [7, 4, 1, "", "keep_track"], [7, 4, 1, "", "polar_dis"], [7, 4, 1, "", "polar_sum"], [7, 4, 1, "", "polar_to_cart"], [7, 4, 1, "", "printLog"], [7, 4, 1, "", "same_polar_point"], [7, 4, 1, "", "three_point_deviation"], [7, 4, 1, "", "track_time"]], "unified_frameworks.unified_utils.Service": [[7, 2, 1, "", "is_running"], [7, 2, 1, "", "start_service"], [7, 2, 1, "", "stop_service"]], "unified_frameworks.worldview": [[7, 1, 1, "", "Worldview"]], "unified_frameworks.worldview.Worldview": [[7, 2, 1, "", "geographic_coordinates_to_relative_coordinates"], [7, 2, 1, "", "get_obstacles"], [7, 2, 1, "", "get_points"], [7, 2, 1, "", "get_rover_body"], [7, 2, 1, "", "start_service"], [7, 2, 1, "", "stop_service"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"commandscript": 0, "packag": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12], "submodul": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12], "autohelp": 0, "modul": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12], "gps_nav": 0, "mmt_drive_command": 0, "trajectori": 0, "autonomi": [0, 4], "drive_command": 0, "content": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "mission": 1, "mmt_test": 1, "drive": 1, "vision": [2, 3], "subpackag": [2, 7, 10], "proj_modul": [3, 6], "camera": 3, "test": 3, "object": 3, "width": 3, "stereo": 3, "welcom": 4, "sjsu": 4, "robot": 4, "": 4, "document": 4, "indic": 4, "tabl": 4, "urc": 5, "intellig": 5, "system": 5, "2023": 5, "gp": 6, "ir_sensor": 6, "lsm303": 6, "mpu6050": 6, "serial": 6, "wifi": 6, "paramet": [6, 12], "old_gp": 6, "unified_framework": [7, 8, 9, 10, 11, 12], "captain": 7, "pathfinder_visu": 7, "unified_util": 7, "worldview": 7, "worldview_visu": 7, "bridg": 8, "client_sid": 8, "except": 8, "rover_sid": 8, "pathfind": 9, "navigatorclass": 9, "a_star_navig": 9, "rapid_random_tre": 9, "straight_shot": 9, "sensor_arrai": [10, 11, 12], "actual_gps_test": 10, "bridge_gp": 10, "server_gp": 10, "gps_compass": 11, "actual_gps_compass": 11, "fake_gps_compass": 11, "gps_compass_class": 11, "wireless_gps_compass": 11, "lidar": 12, "lidarclass": 12, "actual_lidar": 12, "return": 12, "bridge_lidar": 12, "fake_lidar": 12, "lidar_visu": 12}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"CommandScripts package": [[0, "commandscripts-package"]], "Submodules": [[0, "submodules"], [1, "submodules"], [3, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"]], "CommandScripts.AutoHelp module": [[0, "module-CommandScripts.AutoHelp"]], "CommandScripts.GPS_NAV module": [[0, "module-CommandScripts.GPS_NAV"]], "CommandScripts.MMT_drive_command module": [[0, "module-CommandScripts.MMT_drive_command"]], "CommandScripts.Trajectory module": [[0, "module-CommandScripts.Trajectory"]], "CommandScripts.autonomy module": [[0, "module-CommandScripts.autonomy"]], "CommandScripts.drive_command module": [[0, "module-CommandScripts.drive_command"]], "Module contents": [[0, "module-CommandScripts"], [1, "module-Missions"], [2, "module-Vision"], [3, "module-Vision.proj_modules"], [6, "module-proj_modules"], [7, "module-unified_frameworks"], [8, "module-unified_frameworks.bridge"], [9, "module-unified_frameworks.pathfinders"], [10, "module-unified_frameworks.sensor_array"], [11, "module-unified_frameworks.sensor_array.gps_compass"], [12, "module-unified_frameworks.sensor_array.lidar"]], "Missions package": [[1, "missions-package"]], "Missions.MMT_testing module": [[1, "module-Missions.MMT_testing"]], "Missions.drive module": [[1, "module-Missions.drive"]], "Vision package": [[2, "vision-package"]], "Subpackages": [[2, "subpackages"], [7, "subpackages"], [10, "subpackages"]], "Vision.proj_modules package": [[3, "vision-proj-modules-package"]], "Vision.proj_modules.camera-test module": [[3, "vision-proj-modules-camera-test-module"]], "Vision.proj_modules.object-width module": [[3, "vision-proj-modules-object-width-module"]], "Vision.proj_modules.stereo-vision-test module": [[3, "vision-proj-modules-stereo-vision-test-module"]], "Welcome to Autonomy@SJSU-Robotics\u2019s documentation!": [[4, "welcome-to-autonomy-sjsu-robotics-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "urc-intelligent-systems-2023": [[5, "urc-intelligent-systems-2023"]], "proj_modules package": [[6, "proj-modules-package"]], "proj_modules.GPS module": [[6, "module-proj_modules.GPS"]], "proj_modules.IR_Sensor module": [[6, "proj-modules-ir-sensor-module"]], "proj_modules.LSM303 module": [[6, "module-proj_modules.LSM303"]], "proj_modules.MPU6050 module": [[6, "module-proj_modules.MPU6050"]], "proj_modules.Serial module": [[6, "module-proj_modules.Serial"]], "proj_modules.WiFi module": [[6, "module-proj_modules.WiFi"]], "Parameters": [[6, "parameters"], [12, "parameters"], [12, "id1"], [12, "id3"]], "proj_modules.old_GPS module": [[6, "module-proj_modules.old_GPS"]], "unified_frameworks package": [[7, "unified-frameworks-package"]], "unified_frameworks.captain module": [[7, "module-unified_frameworks.captain"]], "unified_frameworks.pathfinder_visualizer module": [[7, "module-unified_frameworks.pathfinder_visualizer"]], "unified_frameworks.unified_utils module": [[7, "module-unified_frameworks.unified_utils"]], "unified_frameworks.worldview module": [[7, "module-unified_frameworks.worldview"]], "unified_frameworks.worldview_visualizer module": [[7, "module-unified_frameworks.worldview_visualizer"]], "unified_frameworks.bridge package": [[8, "unified-frameworks-bridge-package"]], "unified_frameworks.bridge.client_side module": [[8, "module-unified_frameworks.bridge.client_side"]], "unified_frameworks.bridge.exceptions module": [[8, "module-unified_frameworks.bridge.exceptions"]], "unified_frameworks.bridge.rover_side module": [[8, "module-unified_frameworks.bridge.rover_side"]], "unified_frameworks.pathfinders package": [[9, "unified-frameworks-pathfinders-package"]], "unified_frameworks.pathfinders.NavigatorClass module": [[9, "module-unified_frameworks.pathfinders.NavigatorClass"]], "unified_frameworks.pathfinders.a_star_navigator module": [[9, "module-unified_frameworks.pathfinders.a_star_navigator"]], "unified_frameworks.pathfinders.pathfinder module": [[9, "module-unified_frameworks.pathfinders.pathfinder"]], "unified_frameworks.pathfinders.rapid_random_tree module": [[9, "module-unified_frameworks.pathfinders.rapid_random_tree"]], "unified_frameworks.pathfinders.straight_shot module": [[9, "module-unified_frameworks.pathfinders.straight_shot"]], "unified_frameworks.sensor_array package": [[10, "unified-frameworks-sensor-array-package"]], "unified_frameworks.sensor_array.actual_gps_test module": [[10, "unified-frameworks-sensor-array-actual-gps-test-module"]], "unified_frameworks.sensor_array.bridge_gps module": [[10, "unified-frameworks-sensor-array-bridge-gps-module"]], "unified_frameworks.sensor_array.server_gps module": [[10, "unified-frameworks-sensor-array-server-gps-module"]], "unified_frameworks.sensor_array.gps_compass package": [[11, "unified-frameworks-sensor-array-gps-compass-package"]], "unified_frameworks.sensor_array.gps_compass.actual_gps_compass module": [[11, "module-unified_frameworks.sensor_array.gps_compass.actual_gps_compass"]], "unified_frameworks.sensor_array.gps_compass.fake_gps_compass module": [[11, "module-unified_frameworks.sensor_array.gps_compass.fake_gps_compass"]], "unified_frameworks.sensor_array.gps_compass.gps_compass module": [[11, "unified-frameworks-sensor-array-gps-compass-gps-compass-module"]], "unified_frameworks.sensor_array.gps_compass.gps_compass_class module": [[11, "module-unified_frameworks.sensor_array.gps_compass.gps_compass_class"]], "unified_frameworks.sensor_array.gps_compass.wireless_gps_compass module": [[11, "unified-frameworks-sensor-array-gps-compass-wireless-gps-compass-module"]], "unified_frameworks.sensor_array.lidar package": [[12, "unified-frameworks-sensor-array-lidar-package"]], "unified_frameworks.sensor_array.lidar.LidarClass module": [[12, "module-unified_frameworks.sensor_array.lidar.LidarClass"]], "unified_frameworks.sensor_array.lidar.actual_lidar module": [[12, "module-unified_frameworks.sensor_array.lidar.actual_lidar"]], "Returns": [[12, "returns"], [12, "id2"], [12, "id4"]], "unified_frameworks.sensor_array.lidar.bridge_lidar module": [[12, "module-unified_frameworks.sensor_array.lidar.bridge_lidar"]], "unified_frameworks.sensor_array.lidar.fake_lidar module": [[12, "module-unified_frameworks.sensor_array.lidar.fake_lidar"]], "unified_frameworks.sensor_array.lidar.lidar module": [[12, "module-unified_frameworks.sensor_array.lidar.lidar"]], "unified_frameworks.sensor_array.lidar.lidar_visualizer module": [[12, "unified-frameworks-sensor-array-lidar-lidar-visualizer-module"]]}, "indexentries": {"autohelp (class in commandscripts.autohelp)": [[0, "CommandScripts.AutoHelp.AutoHelp"]], "autonomy (class in commandscripts.autonomy)": [[0, "CommandScripts.autonomy.Autonomy"]], "commandscripts": [[0, "module-CommandScripts"]], "commandscripts.autohelp": [[0, "module-CommandScripts.AutoHelp"]], "commandscripts.gps_nav": [[0, "module-CommandScripts.GPS_NAV"]], "commandscripts.mmt_drive_command": [[0, "module-CommandScripts.MMT_drive_command"]], "commandscripts.trajectory": [[0, "module-CommandScripts.Trajectory"]], "commandscripts.autonomy": [[0, "module-CommandScripts.autonomy"]], "commandscripts.drive_command": [[0, "module-CommandScripts.drive_command"]], "gps_nav (class in commandscripts.gps_nav)": [[0, "CommandScripts.GPS_NAV.GPS_Nav"]], "pid_steer() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.PID_steer"]], "trajectory (class in commandscripts.trajectory)": [[0, "CommandScripts.Trajectory.Trajectory"]], "vfh_obstacle_avoidance (class in commandscripts.gps_nav)": [[0, "CommandScripts.GPS_NAV.VFH_obstacle_avoidance"]], "change_modes() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.change_modes"]], "forward_drive() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.forward_drive"]], "get_bearing() (commandscripts.autohelp.autohelp method)": [[0, "CommandScripts.AutoHelp.AutoHelp.get_bearing"]], "get_bearing() (commandscripts.gps_nav.vfh_obstacle_avoidance method)": [[0, "CommandScripts.GPS_NAV.VFH_obstacle_avoidance.get_bearing"]], "get_distance() (commandscripts.autohelp.autohelp method)": [[0, "CommandScripts.AutoHelp.AutoHelp.get_distance"]], "get_rover_status() (commandscripts.autonomy.autonomy method)": [[0, "CommandScripts.autonomy.Autonomy.get_rover_status"]], "get_spin_angle() (commandscripts.autohelp.autohelp method)": [[0, "CommandScripts.AutoHelp.AutoHelp.get_spin_angle"]], "get_steering() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.get_steering"]], "get_target_angle() (commandscripts.gps_nav.vfh_obstacle_avoidance method)": [[0, "CommandScripts.GPS_NAV.VFH_obstacle_avoidance.get_target_angle"]], "goto_next_coordinate() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.goto_next_coordinate"]], "jsonify_commands() (commandscripts.autohelp.autohelp method)": [[0, "CommandScripts.AutoHelp.AutoHelp.jsonify_commands"]], "module": [[0, "module-CommandScripts"], [0, "module-CommandScripts.AutoHelp"], [0, "module-CommandScripts.GPS_NAV"], [0, "module-CommandScripts.MMT_drive_command"], [0, "module-CommandScripts.Trajectory"], [0, "module-CommandScripts.autonomy"], [0, "module-CommandScripts.drive_command"], [1, "module-Missions"], [1, "module-Missions.MMT_testing"], [1, "module-Missions.drive"], [2, "module-Vision"], [3, "module-Vision.proj_modules"], [6, "module-proj_modules"], [6, "module-proj_modules.GPS"], [6, "module-proj_modules.LSM303"], [6, "module-proj_modules.MPU6050"], [6, "module-proj_modules.Serial"], [6, "module-proj_modules.WiFi"], [6, "module-proj_modules.old_GPS"], [7, "module-unified_frameworks"], [7, "module-unified_frameworks.captain"], [7, "module-unified_frameworks.pathfinder_visualizer"], [7, "module-unified_frameworks.unified_utils"], [7, "module-unified_frameworks.worldview"], [7, "module-unified_frameworks.worldview_visualizer"], [8, "module-unified_frameworks.bridge"], [8, "module-unified_frameworks.bridge.client_side"], [8, "module-unified_frameworks.bridge.exceptions"], [8, "module-unified_frameworks.bridge.rover_side"], [9, "module-unified_frameworks.pathfinders"], [9, "module-unified_frameworks.pathfinders.NavigatorClass"], [9, "module-unified_frameworks.pathfinders.a_star_navigator"], [9, "module-unified_frameworks.pathfinders.pathfinder"], [9, "module-unified_frameworks.pathfinders.rapid_random_tree"], [9, "module-unified_frameworks.pathfinders.straight_shot"], [10, "module-unified_frameworks.sensor_array"], [11, "module-unified_frameworks.sensor_array.gps_compass"], [11, "module-unified_frameworks.sensor_array.gps_compass.actual_gps_compass"], [11, "module-unified_frameworks.sensor_array.gps_compass.fake_gps_compass"], [11, "module-unified_frameworks.sensor_array.gps_compass.gps_compass_class"], [12, "module-unified_frameworks.sensor_array.lidar"], [12, "module-unified_frameworks.sensor_array.lidar.LidarClass"], [12, "module-unified_frameworks.sensor_array.lidar.actual_lidar"], [12, "module-unified_frameworks.sensor_array.lidar.bridge_lidar"], [12, "module-unified_frameworks.sensor_array.lidar.fake_lidar"], [12, "module-unified_frameworks.sensor_array.lidar.lidar"]], "object_detected() (commandscripts.trajectory.trajectory method)": [[0, "CommandScripts.Trajectory.Trajectory.object_detected"]], "spin() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.spin"]], "start_mission() (commandscripts.autonomy.autonomy method)": [[0, "CommandScripts.autonomy.Autonomy.start_mission"]], "stop_rover() (commandscripts.gps_nav.gps_nav method)": [[0, "CommandScripts.GPS_NAV.GPS_Nav.stop_rover"]], "update_gps() (commandscripts.autonomy.autonomy method)": [[0, "CommandScripts.autonomy.Autonomy.update_gps"]], "missions": [[1, "module-Missions"]], "missions.mmt_testing": [[1, "module-Missions.MMT_testing"]], "missions.drive": [[1, "module-Missions.drive"]], "vision": [[2, "module-Vision"]], "vision.proj_modules": [[3, "module-Vision.proj_modules"]], "compass (class in proj_modules.lsm303)": [[6, "proj_modules.LSM303.Compass"]], "drive (proj_modules.wifi.modes attribute)": [[6, "proj_modules.WiFi.Modes.DRIVE"]], "mpu6050 (class in proj_modules.mpu6050)": [[6, "proj_modules.MPU6050.MPU6050"]], "mpu_init() (proj_modules.mpu6050.mpu6050 method)": [[6, "proj_modules.MPU6050.MPU6050.MPU_Init"]], "modes (class in proj_modules.wifi)": [[6, "proj_modules.WiFi.Modes"]], "spin (proj_modules.wifi.modes attribute)": [[6, "proj_modules.WiFi.Modes.SPIN"]], "serialsystem (class in proj_modules.serial)": [[6, "proj_modules.Serial.SerialSystem"]], "translate (proj_modules.wifi.modes attribute)": [[6, "proj_modules.WiFi.Modes.TRANSLATE"]], "wifi (class in proj_modules.wifi)": [[6, "proj_modules.WiFi.WiFi"]], "close_serial() (proj_modules.serial.serialsystem method)": [[6, "proj_modules.Serial.SerialSystem.close_serial"]], "get_heading() (proj_modules.lsm303.compass method)": [[6, "proj_modules.LSM303.Compass.get_heading"]], "get_position() (proj_modules.gps.gpsread method)": [[6, "proj_modules.GPS.gpsRead.get_position"]], "get_position() (proj_modules.old_gps.gpsread method)": [[6, "proj_modules.old_GPS.gpsRead.get_position"]], "get_raw() (proj_modules.lsm303.compass method)": [[6, "proj_modules.LSM303.Compass.get_raw"]], "get_status() (proj_modules.wifi.wifi method)": [[6, "proj_modules.WiFi.WiFi.get_status"]], "gpsread (class in proj_modules.gps)": [[6, "proj_modules.GPS.gpsRead"]], "gpsread (class in proj_modules.old_gps)": [[6, "proj_modules.old_GPS.gpsRead"]], "hard_iron_bias_x (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.hard_iron_bias_x"]], "hard_iron_bias_y (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.hard_iron_bias_y"]], "hard_iron_bias_z (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.hard_iron_bias_z"]], "make_drive_command() (in module proj_modules.wifi)": [[6, "proj_modules.WiFi.make_drive_command"]], "proj_modules": [[6, "module-proj_modules"]], "proj_modules.gps": [[6, "module-proj_modules.GPS"]], "proj_modules.lsm303": [[6, "module-proj_modules.LSM303"]], "proj_modules.mpu6050": [[6, "module-proj_modules.MPU6050"]], "proj_modules.serial": [[6, "module-proj_modules.Serial"]], "proj_modules.wifi": [[6, "module-proj_modules.WiFi"]], "proj_modules.old_gps": [[6, "module-proj_modules.old_GPS"]], "read_data() (proj_modules.mpu6050.mpu6050 method)": [[6, "proj_modules.MPU6050.MPU6050.read_data"]], "read_data() (proj_modules.wifi.wifi method)": [[6, "proj_modules.WiFi.WiFi.read_data"]], "read_raw_data() (proj_modules.mpu6050.mpu6050 method)": [[6, "proj_modules.MPU6050.MPU6050.read_raw_data"]], "read_serial() (proj_modules.serial.serialsystem method)": [[6, "proj_modules.Serial.SerialSystem.read_serial"]], "send_command() (proj_modules.wifi.wifi method)": [[6, "proj_modules.WiFi.WiFi.send_command"]], "send_request() (proj_modules.gps.gpsread method)": [[6, "proj_modules.GPS.gpsRead.send_request"]], "send_request() (proj_modules.old_gps.gpsread method)": [[6, "proj_modules.old_GPS.gpsRead.send_request"]], "soft_iron_bias_xx (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_xx"]], "soft_iron_bias_xy (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_xy"]], "soft_iron_bias_xz (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_xz"]], "soft_iron_bias_yx (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_yx"]], "soft_iron_bias_yy (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_yy"]], "soft_iron_bias_yz (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_yz"]], "soft_iron_bias_zx (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_zx"]], "soft_iron_bias_zy (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_zy"]], "soft_iron_bias_zz (proj_modules.lsm303.compass attribute)": [[6, "proj_modules.LSM303.Compass.soft_iron_bias_zz"]], "write_data() (proj_modules.wifi.wifi method)": [[6, "proj_modules.WiFi.WiFi.write_data"]], "write_serial() (proj_modules.serial.serialsystem method)": [[6, "proj_modules.Serial.SerialSystem.write_serial"]], "captain (class in unified_frameworks.captain)": [[7, "unified_frameworks.captain.Captain"]], "service (class in unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.Service"]], "worldview (class in unified_frameworks.worldview)": [[7, "unified_frameworks.worldview.Worldview"]], "at_coordinate_function() (unified_frameworks.captain.captain method)": [[7, "unified_frameworks.captain.Captain.at_coordinate_function"]], "captain_act() (unified_frameworks.captain.captain method)": [[7, "unified_frameworks.captain.Captain.captain_act"]], "captain_stop() (unified_frameworks.captain.captain method)": [[7, "unified_frameworks.captain.Captain.captain_stop"]], "cart_to_polar() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.cart_to_polar"]], "geographic_coordinates_to_relative_coordinates() (unified_frameworks.worldview.worldview method)": [[7, "unified_frameworks.worldview.Worldview.geographic_coordinates_to_relative_coordinates"]], "get_obstacles() (unified_frameworks.worldview.worldview method)": [[7, "unified_frameworks.worldview.Worldview.get_obstacles"]], "get_points() (unified_frameworks.worldview.worldview method)": [[7, "unified_frameworks.worldview.Worldview.get_points"]], "get_rover_body() (unified_frameworks.worldview.worldview method)": [[7, "unified_frameworks.worldview.Worldview.get_rover_body"]], "is_running() (unified_frameworks.unified_utils.service method)": [[7, "unified_frameworks.unified_utils.Service.is_running"]], "keep_track() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.keep_track"]], "polar_dis() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.polar_dis"]], "polar_sum() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.polar_sum"]], "polar_to_cart() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.polar_to_cart"]], "printlog() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.printLog"]], "run_captain() (unified_frameworks.captain.captain method)": [[7, "unified_frameworks.captain.Captain.run_captain"]], "run_visualizer() (in module unified_frameworks.pathfinder_visualizer)": [[7, "unified_frameworks.pathfinder_visualizer.run_visualizer"]], "same_polar_point() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.same_polar_point"]], "show_visual() (in module unified_frameworks.pathfinder_visualizer)": [[7, "unified_frameworks.pathfinder_visualizer.show_visual"]], "start_service() (unified_frameworks.unified_utils.service method)": [[7, "unified_frameworks.unified_utils.Service.start_service"]], "start_service() (unified_frameworks.worldview.worldview method)": [[7, "unified_frameworks.worldview.Worldview.start_service"]], "stop_service() (unified_frameworks.unified_utils.service method)": [[7, "unified_frameworks.unified_utils.Service.stop_service"]], "stop_service() (unified_frameworks.worldview.worldview method)": [[7, "unified_frameworks.worldview.Worldview.stop_service"]], "three_point_deviation() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.three_point_deviation"]], "track_time() (in module unified_frameworks.unified_utils)": [[7, "unified_frameworks.unified_utils.track_time"]], "unified_frameworks": [[7, "module-unified_frameworks"]], "unified_frameworks.captain": [[7, "module-unified_frameworks.captain"]], "unified_frameworks.pathfinder_visualizer": [[7, "module-unified_frameworks.pathfinder_visualizer"]], "unified_frameworks.unified_utils": [[7, "module-unified_frameworks.unified_utils"]], "unified_frameworks.worldview": [[7, "module-unified_frameworks.worldview"]], "unified_frameworks.worldview_visualizer": [[7, "module-unified_frameworks.worldview_visualizer"]], "noopenbridgeexception": [[8, "unified_frameworks.bridge.exceptions.NoOpenBridgeException"]], "blocking_start_client() (in module unified_frameworks.bridge.client_side)": [[8, "unified_frameworks.bridge.client_side.blocking_start_client"]], "blocking_start_server() (in module unified_frameworks.bridge.rover_side)": [[8, "unified_frameworks.bridge.rover_side.blocking_start_server"]], "bridge_is_up() (in module unified_frameworks.bridge.client_side)": [[8, "unified_frameworks.bridge.client_side.bridge_is_up"]], "bridge_is_up() (in module unified_frameworks.bridge.rover_side)": [[8, "unified_frameworks.bridge.rover_side.bridge_is_up"]], "close_bridge() (in module unified_frameworks.bridge.client_side)": [[8, "unified_frameworks.bridge.client_side.close_bridge"]], "create_connections() (in module unified_frameworks.bridge.client_side)": [[8, "unified_frameworks.bridge.client_side.create_connections"]], "open_bridge() (in module unified_frameworks.bridge.client_side)": [[8, "unified_frameworks.bridge.client_side.open_bridge"]], "send_data() (in module unified_frameworks.bridge.rover_side)": [[8, "unified_frameworks.bridge.rover_side.send_data"]], "start_server() (in module unified_frameworks.bridge.rover_side)": [[8, "unified_frameworks.bridge.rover_side.start_server"]], "sync_path() (in module unified_frameworks.bridge.client_side)": [[8, "unified_frameworks.bridge.client_side.sync_path"]], "unified_frameworks.bridge": [[8, "module-unified_frameworks.bridge"]], "unified_frameworks.bridge.client_side": [[8, "module-unified_frameworks.bridge.client_side"]], "unified_frameworks.bridge.exceptions": [[8, "module-unified_frameworks.bridge.exceptions"]], "unified_frameworks.bridge.rover_side": [[8, "module-unified_frameworks.bridge.rover_side"]], "value_changed() (in module unified_frameworks.bridge.rover_side)": [[8, "unified_frameworks.bridge.rover_side.value_changed"]], "a_star_navigator (class in unified_frameworks.pathfinders.a_star_navigator)": [[9, "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator"]], "navigator (class in unified_frameworks.pathfinders.navigatorclass)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator"]], "pathfinders (unified_frameworks.pathfinders.pathfinder.pathfinder attribute)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.PATHFINDERS"]], "pathfinder (class in unified_frameworks.pathfinders.pathfinder)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder"]], "rrt_navigator (class in unified_frameworks.pathfinders.rapid_random_tree)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.RRT_Navigator"]], "straightshot (class in unified_frameworks.pathfinders.straight_shot)": [[9, "unified_frameworks.pathfinders.straight_shot.StraightShot"]], "distance_to_target() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.distance_to_target"]], "distance_to_target() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.distance_to_target"]], "exploration_step() (in module unified_frameworks.pathfinders.rapid_random_tree)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.exploration_step"]], "get_goal() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.get_goal"]], "get_goal() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.get_goal"]], "get_path() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.get_path"]], "get_path() (unified_frameworks.pathfinders.a_star_navigator.a_star_navigator method)": [[9, "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator.get_path"]], "get_path() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.get_path"]], "get_path() (unified_frameworks.pathfinders.rapid_random_tree.rrt_navigator method)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.RRT_Navigator.get_path"]], "get_path() (unified_frameworks.pathfinders.straight_shot.straightshot method)": [[9, "unified_frameworks.pathfinders.straight_shot.StraightShot.get_path"]], "get_tree_links() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.get_tree_links"]], "get_tree_links() (unified_frameworks.pathfinders.a_star_navigator.a_star_navigator method)": [[9, "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator.get_tree_links"]], "get_tree_links() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.get_tree_links"]], "get_tree_links() (unified_frameworks.pathfinders.rapid_random_tree.rrt_navigator method)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.RRT_Navigator.get_tree_links"]], "get_tree_links() (unified_frameworks.pathfinders.straight_shot.straightshot method)": [[9, "unified_frameworks.pathfinders.straight_shot.StraightShot.get_tree_links"]], "grow_tree() (in module unified_frameworks.pathfinders.rapid_random_tree)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.grow_tree"]], "name (unified_frameworks.pathfinders.a_star_navigator.a_star_navigator attribute)": [[9, "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator.name"]], "set_goal() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.set_goal"]], "set_goal() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.set_goal"]], "set_gps_goal() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.set_gps_goal"]], "start_pathfinder_service() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.start_pathfinder_service"]], "start_pathfinder_service() (unified_frameworks.pathfinders.a_star_navigator.a_star_navigator method)": [[9, "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator.start_pathfinder_service"]], "start_pathfinder_service() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.start_pathfinder_service"]], "start_pathfinder_service() (unified_frameworks.pathfinders.rapid_random_tree.rrt_navigator method)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.RRT_Navigator.start_pathfinder_service"]], "start_pathfinder_service() (unified_frameworks.pathfinders.straight_shot.straightshot method)": [[9, "unified_frameworks.pathfinders.straight_shot.StraightShot.start_pathfinder_service"]], "stop_pathfinder_service() (unified_frameworks.pathfinders.navigatorclass.navigator method)": [[9, "unified_frameworks.pathfinders.NavigatorClass.Navigator.stop_pathfinder_service"]], "stop_pathfinder_service() (unified_frameworks.pathfinders.a_star_navigator.a_star_navigator method)": [[9, "unified_frameworks.pathfinders.a_star_navigator.A_Star_Navigator.stop_pathfinder_service"]], "stop_pathfinder_service() (unified_frameworks.pathfinders.pathfinder.pathfinder method)": [[9, "unified_frameworks.pathfinders.pathfinder.Pathfinder.stop_pathfinder_service"]], "stop_pathfinder_service() (unified_frameworks.pathfinders.rapid_random_tree.rrt_navigator method)": [[9, "unified_frameworks.pathfinders.rapid_random_tree.RRT_Navigator.stop_pathfinder_service"]], "stop_pathfinder_service() (unified_frameworks.pathfinders.straight_shot.straightshot method)": [[9, "unified_frameworks.pathfinders.straight_shot.StraightShot.stop_pathfinder_service"]], "unified_frameworks.pathfinders": [[9, "module-unified_frameworks.pathfinders"]], "unified_frameworks.pathfinders.navigatorclass": [[9, "module-unified_frameworks.pathfinders.NavigatorClass"]], "unified_frameworks.pathfinders.a_star_navigator": [[9, "module-unified_frameworks.pathfinders.a_star_navigator"]], "unified_frameworks.pathfinders.pathfinder": [[9, "module-unified_frameworks.pathfinders.pathfinder"]], "unified_frameworks.pathfinders.rapid_random_tree": [[9, "module-unified_frameworks.pathfinders.rapid_random_tree"]], "unified_frameworks.pathfinders.straight_shot": [[9, "module-unified_frameworks.pathfinders.straight_shot"]], "unified_frameworks.sensor_array": [[10, "module-unified_frameworks.sensor_array"]], "actualgpscompass (class in unified_frameworks.sensor_array.gps_compass.actual_gps_compass)": [[11, "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass"]], "fakegpscompass (class in unified_frameworks.sensor_array.gps_compass.fake_gps_compass)": [[11, "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass"]], "util (class in unified_frameworks.sensor_array.gps_compass.gps_compass_class)": [[11, "unified_frameworks.sensor_array.gps_compass.gps_compass_class.Util"]], "geographic_coordinates_to_relative_coordinates() (unified_frameworks.sensor_array.gps_compass.fake_gps_compass.fakegpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass.geographic_coordinates_to_relative_coordinates"]], "get_bearing() (unified_frameworks.sensor_array.gps_compass.gps_compass_class.util method)": [[11, "unified_frameworks.sensor_array.gps_compass.gps_compass_class.Util.get_bearing"]], "get_cur_angle() (unified_frameworks.sensor_array.gps_compass.actual_gps_compass.actualgpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass.get_cur_angle"]], "get_cur_angle() (unified_frameworks.sensor_array.gps_compass.fake_gps_compass.fakegpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass.get_cur_angle"]], "get_cur_gps() (unified_frameworks.sensor_array.gps_compass.actual_gps_compass.actualgpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass.get_cur_gps"]], "get_cur_gps() (unified_frameworks.sensor_array.gps_compass.fake_gps_compass.fakegpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass.get_cur_gps"]], "get_distance() (unified_frameworks.sensor_array.gps_compass.gps_compass_class.util method)": [[11, "unified_frameworks.sensor_array.gps_compass.gps_compass_class.Util.get_distance"]], "read() (unified_frameworks.sensor_array.gps_compass.actual_gps_compass.actualgpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass.read"]], "start_service() (unified_frameworks.sensor_array.gps_compass.actual_gps_compass.actualgpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass.start_service"]], "start_service() (unified_frameworks.sensor_array.gps_compass.fake_gps_compass.fakegpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass.start_service"]], "stop_service() (unified_frameworks.sensor_array.gps_compass.actual_gps_compass.actualgpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.actual_gps_compass.ActualGPSCompass.stop_service"]], "stop_service() (unified_frameworks.sensor_array.gps_compass.fake_gps_compass.fakegpscompass method)": [[11, "unified_frameworks.sensor_array.gps_compass.fake_gps_compass.FakeGPSCompass.stop_service"]], "unified_frameworks.sensor_array.gps_compass": [[11, "module-unified_frameworks.sensor_array.gps_compass"]], "unified_frameworks.sensor_array.gps_compass.actual_gps_compass": [[11, "module-unified_frameworks.sensor_array.gps_compass.actual_gps_compass"]], "unified_frameworks.sensor_array.gps_compass.fake_gps_compass": [[11, "module-unified_frameworks.sensor_array.gps_compass.fake_gps_compass"]], "unified_frameworks.sensor_array.gps_compass.gps_compass_class": [[11, "module-unified_frameworks.sensor_array.gps_compass.gps_compass_class"]], "actuallidar (class in unified_frameworks.sensor_array.lidar.actual_lidar)": [[12, "unified_frameworks.sensor_array.lidar.actual_lidar.ActualLidar"]], "bridgelidar (class in unified_frameworks.sensor_array.lidar.bridge_lidar)": [[12, "unified_frameworks.sensor_array.lidar.bridge_lidar.BridgeLidar"]], "fakelidar (class in unified_frameworks.sensor_array.lidar.fake_lidar)": [[12, "unified_frameworks.sensor_array.lidar.fake_lidar.FakeLidar"]], "lidar (class in unified_frameworks.sensor_array.lidar.lidar)": [[12, "unified_frameworks.sensor_array.lidar.lidar.Lidar"]], "lidardisconnectexception": [[12, "unified_frameworks.sensor_array.lidar.LidarClass.LidarDisconnectException"]], "nolidarexception": [[12, "unified_frameworks.sensor_array.lidar.lidar.NoLidarException"]], "path (unified_frameworks.sensor_array.lidar.bridge_lidar.bridgelidar attribute)": [[12, "unified_frameworks.sensor_array.lidar.bridge_lidar.BridgeLidar.PATH"]], "connect() (unified_frameworks.sensor_array.lidar.actual_lidar.actuallidar method)": [[12, "unified_frameworks.sensor_array.lidar.actual_lidar.ActualLidar.connect"]], "connect() (unified_frameworks.sensor_array.lidar.bridge_lidar.bridgelidar method)": [[12, "unified_frameworks.sensor_array.lidar.bridge_lidar.BridgeLidar.connect"]], "connect() (unified_frameworks.sensor_array.lidar.fake_lidar.fakelidar method)": [[12, "unified_frameworks.sensor_array.lidar.fake_lidar.FakeLidar.connect"]], "connect_to_rplidar() (unified_frameworks.sensor_array.lidar.actual_lidar.actuallidar method)": [[12, "unified_frameworks.sensor_array.lidar.actual_lidar.ActualLidar.connect_to_RPLidar"]], "disconnect() (unified_frameworks.sensor_array.lidar.actual_lidar.actuallidar method)": [[12, "unified_frameworks.sensor_array.lidar.actual_lidar.ActualLidar.disconnect"]], "disconnect() (unified_frameworks.sensor_array.lidar.bridge_lidar.bridgelidar method)": [[12, "unified_frameworks.sensor_array.lidar.bridge_lidar.BridgeLidar.disconnect"]], "disconnect() (unified_frameworks.sensor_array.lidar.fake_lidar.fakelidar method)": [[12, "unified_frameworks.sensor_array.lidar.fake_lidar.FakeLidar.disconnect"]], "getdeviceport() (in module unified_frameworks.sensor_array.lidar.actual_lidar)": [[12, "unified_frameworks.sensor_array.lidar.actual_lidar.getDevicePort"]], "get_measures() (unified_frameworks.sensor_array.lidar.actual_lidar.actuallidar method)": [[12, "unified_frameworks.sensor_array.lidar.actual_lidar.ActualLidar.get_measures"]], "get_measures() (unified_frameworks.sensor_array.lidar.bridge_lidar.bridgelidar method)": [[12, "unified_frameworks.sensor_array.lidar.bridge_lidar.BridgeLidar.get_measures"]], "get_measures() (unified_frameworks.sensor_array.lidar.fake_lidar.fakelidar method)": [[12, "unified_frameworks.sensor_array.lidar.fake_lidar.FakeLidar.get_measures"]], "get_obstacles() (unified_frameworks.sensor_array.lidar.lidar.lidar method)": [[12, "unified_frameworks.sensor_array.lidar.lidar.Lidar.get_obstacles"]], "get_point_clouds() (unified_frameworks.sensor_array.lidar.lidar.lidar method)": [[12, "unified_frameworks.sensor_array.lidar.lidar.Lidar.get_point_clouds"]], "start_service() (unified_frameworks.sensor_array.lidar.lidar.lidar method)": [[12, "unified_frameworks.sensor_array.lidar.lidar.Lidar.start_service"]], "stop_service() (unified_frameworks.sensor_array.lidar.lidar.lidar method)": [[12, "unified_frameworks.sensor_array.lidar.lidar.Lidar.stop_service"]], "unified_frameworks.sensor_array.lidar": [[12, "module-unified_frameworks.sensor_array.lidar"]], "unified_frameworks.sensor_array.lidar.lidarclass": [[12, "module-unified_frameworks.sensor_array.lidar.LidarClass"]], "unified_frameworks.sensor_array.lidar.actual_lidar": [[12, "module-unified_frameworks.sensor_array.lidar.actual_lidar"]], "unified_frameworks.sensor_array.lidar.bridge_lidar": [[12, "module-unified_frameworks.sensor_array.lidar.bridge_lidar"]], "unified_frameworks.sensor_array.lidar.fake_lidar": [[12, "module-unified_frameworks.sensor_array.lidar.fake_lidar"]], "unified_frameworks.sensor_array.lidar.lidar": [[12, "module-unified_frameworks.sensor_array.lidar.lidar"]]}})